/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Color;
/**
 *
 * @author akhilnarang
 */
public class stuff extends javax.swing.JFrame {

    /**
     * Creates new form stuff
     */
    public stuff() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        labelbox = new javax.swing.JCheckBox();
        buttonbox = new javax.swing.JCheckBox();
        textfieldbox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        label = new javax.swing.JLabel();
        button = new javax.swing.JButton();
        textfield = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Color:");

        list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Red", "Blue", "Green", "Magenta", "Cyan", "Yellow", "Gray" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                listPropertyChange(evt);
            }
        });
        list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        labelbox.setText("Apply On Label");
        labelbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labelboxActionPerformed(evt);
            }
        });

        buttonbox.setText("Apply On Button");
        buttonbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonboxActionPerformed(evt);
            }
        });

        textfieldbox.setText("Apply On TextField");
        textfieldbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldboxActionPerformed(evt);
            }
        });

        jLabel2.setText("Affected Controls:");

        label.setText("jLabel");
        label.setOpaque(true);

        button.setText("jButton");

        textfield.setText("jTextField");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textfieldbox))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(150, 150, 150)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textfield)
                                    .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(32, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(66, 66, 66))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label)
                        .addGap(36, 36, 36)
                        .addComponent(button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelbox)
                    .addComponent(buttonbox)
                    .addComponent(textfieldbox))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_listPropertyChange

    }//GEN-LAST:event_listPropertyChange

    private void listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listValueChanged
        if (buttonbox.isSelected())
        {
            button.setBackground(getColor());
        }
        else
        {
            button.setBackground(new javax.swing.JButton().getBackground());
        }
        if (labelbox.isSelected())
        {
            label.setBackground(getColor());
        }
        else
        {
            label.setBackground(new javax.swing.JLabel().getBackground());
        }
        if (textfieldbox.isSelected())
        {
            textfield.setBackground(getColor());
        }
        else
        {
            textfield.setBackground(new javax.swing.JTextField().getBackground());
        }
    }//GEN-LAST:event_listValueChanged

    private void labelboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labelboxActionPerformed
      if (labelbox.isSelected())
        {
            label.setBackground(getColor());
        }
        else
        {
            label.setBackground(new javax.swing.JLabel().getBackground());
        }
    }//GEN-LAST:event_labelboxActionPerformed

    private void buttonboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonboxActionPerformed
        if (buttonbox.isSelected())
        {
            button.setBackground(getColor());
        }
        else
        {
            button.setBackground(new javax.swing.JButton().getBackground());
        }
    }//GEN-LAST:event_buttonboxActionPerformed

    private void textfieldboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldboxActionPerformed
        if (textfieldbox.isSelected())
        {
            textfield.setBackground(getColor());
        }
        else
        {
            textfield.setBackground(new javax.swing.JTextField().getBackground());
        }
    }//GEN-LAST:event_textfieldboxActionPerformed
    
    private Color getColor()
    {
        int n=list.getSelectedIndex();
        Color c=new javax.swing.JButton().getBackground();
        switch (n)
        {
            case 0:c=Color.RED;break;
            case 1:c=Color.BLUE;break;
            case 2:c=Color.GREEN;break;
            case 3:c=Color.MAGENTA;break;
            case 4:c=Color.CYAN;break;
            case 5:c=Color.YELLOW;break;
            case 6:c=Color.GRAY;break;
        }
        return c;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(stuff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(stuff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(stuff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(stuff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new stuff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button;
    private javax.swing.JCheckBox buttonbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JCheckBox labelbox;
    private javax.swing.JList<String> list;
    private javax.swing.JTextField textfield;
    private javax.swing.JCheckBox textfieldbox;
    // End of variables declaration//GEN-END:variables
}
