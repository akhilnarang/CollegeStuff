/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;
/**
 *
 * @author akhil
 */
public class colorlist extends javax.swing.JFrame {

    /**
     * Creates new form colorlist
     */
    public colorlist() {
        initComponents();
        postInit();
    }

    private void postInit() {
        label.addActionListener((ActionEvent evt) -> {
                labelActionPerformed();
        });
        
         button.addActionListener((ActionEvent evt) -> {
             buttonActionPerformed();
        });
         
        textfield.addActionListener((ActionEvent evt) ->{
            textfieldActionPerformed();
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        colorList = new javax.swing.JList<>();
        colorLabel = new javax.swing.JLabel();
        colorButton = new javax.swing.JButton();
        colorTextField = new javax.swing.JTextField();
        label = new javax.swing.JCheckBox();
        button = new javax.swing.JCheckBox();
        textfield = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Color");

        jLabel2.setText("Affected Controls");

        colorList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Red", "Blue", "Green", "Magenta", "Cyan", "Yellow", "Dark Gray" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        colorList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                colorListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(colorList);

        colorLabel.setText("JLabel");
        colorLabel.setOpaque(true);

        colorButton.setText("JButton");

        colorTextField.setText("JTextField");

        label.setText("Apply on Label");

        button.setText("Apply on Button");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        textfield.setText("Apply on TextField");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(colorButton)
                                    .addComponent(colorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(colorLabel)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textfield)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(63, 63, 63))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(label)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(colorLabel)
                        .addGap(28, 28, 28)
                        .addComponent(colorButton)
                        .addGap(27, 27, 27)
                        .addComponent(colorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label)
                    .addComponent(button)
                    .addComponent(textfield))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonActionPerformed

    private void colorListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_colorListValueChanged
        buttonActionPerformed();
        labelActionPerformed();
        textfieldActionPerformed();
    }//GEN-LAST:event_colorListValueChanged
    
    private void buttonActionPerformed() {
        Color c=getSelectedColor();
        Color j=new JButton().getBackground();
        c=(c==Color.WHITE)?j:c;
        if (button.isSelected()) {
            colorButton.setBackground(c);
        } else {
           colorButton.setBackground(j);
        }
    }
    private void labelActionPerformed() {
        Color c=getSelectedColor();
        Color j=new JLabel().getBackground();
        c=(c==Color.WHITE)?j:c;
        if (label.isSelected()) {
            colorLabel.setBackground(c);
        } else {
            colorLabel.setBackground(j);
        }
    }
    
    private void textfieldActionPerformed() {
        Color c=getSelectedColor();
        Color j=new JTextField().getBackground();
        c=(c==Color.WHITE)?j:c;
        if (textfield.isSelected()) {
            colorTextField.setBackground(c);
        } else {
            colorTextField.setBackground(j);
        }
    }
    
    private Color getSelectedColor() {
        int n = colorList.getSelectedIndex();
        Color c = Color.WHITE;
        switch (n) {
            case 0:
                c=Color.RED;
                break;
            case 1:
                c=Color.BLUE;
                break;
            case 2:
                c=Color.GREEN;
                break;
            case 3:
                c=Color.MAGENTA;
                break;
            case 4:
                c=Color.CYAN;
                break;
            case 5:
                c=Color.YELLOW;
                break;
            case 6:
                c=Color.DARK_GRAY;
                break;                
        }
        return c;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(colorlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(colorlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(colorlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(colorlist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new colorlist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox button;
    private javax.swing.JButton colorButton;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JList<String> colorList;
    private javax.swing.JTextField colorTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox label;
    private javax.swing.JCheckBox textfield;
    // End of variables declaration//GEN-END:variables
}
